package templates

import "fmt"



// Reusable UI Components

templ ErrorMessage(msg string) {
	if msg != "" {
		<div class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 mb-4">
			{ msg }
		</div>
	}
}

templ SuccessMessage(msg string) {
	if msg != "" {
		<div class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 mb-4">
			{ msg }
		</div>
	}
}

templ FormInput(label, name, value, inputType string, required bool, placeholder ...string) {
	<div>
		<label for={ name } class="block text-sm font-medium text-gray-700 mb-2">{ label }</label>
		<input 
			type={ inputType } 
			id={ name }
			name={ name } 
			value={ value }
			class="w-full px-3 py-2 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500"
			required?={ required }
			if len(placeholder) > 0 {
				placeholder={ placeholder[0] }
			}
		/>
	</div>
}

templ FormTextarea(label, name, value string, rows int, required bool, placeholder string) {
	<div>
		<label for={ name } class="block text-sm font-medium text-gray-700 mb-2">{ label }</label>
		<textarea 
			id={ name }
			name={ name } 
			rows={ fmt.Sprintf("%d", rows) }
			class="w-full px-3 py-2 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500"
			required?={ required }
			placeholder={ placeholder }
		>{ value }</textarea>
	</div>
}

templ FormSelect(label, name, selectedValue string, options []SelectOption, required bool) {
	<div>
		<label for={ name } class="block text-sm font-medium text-gray-700 mb-2">{ label }</label>
		<select 
			id={ name }
			name={ name }
			class="w-full px-3 py-2 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500"
			required?={ required }
		>
			for _, option := range options {
				<option value={ option.Value } selected?={ option.Value == selectedValue }>
					{ option.Label }
				</option>
			}
		</select>
	</div>
}

templ FormCheckbox(label, name string, checked bool, id string) {
	<div class="flex items-center">
		<input 
			type="checkbox" 
			id={ id }
			name={ name }
			class="h-4 w-4 text-primary-600 border-gray-300 focus:ring-primary-500"
			checked?={ checked }
		/>
		<label for={ id } class="ml-2 text-sm text-gray-700">{ label }</label>
	</div>
}

templ PrimaryButton(text, buttonType string) {
	<button 
		type={ buttonType }
		class="bg-primary-600 text-white px-4 py-2 text-sm font-medium hover:bg-primary-700 transition"
	>
		{ text }
	</button>
}

templ SecondaryButton(text, buttonType string) {
	<button 
		type={ buttonType }
		class="border border-gray-300 text-gray-700 px-4 py-2 text-sm font-medium hover:bg-gray-50 transition"
	>
		{ text }
	</button>
}

templ PublishStatusBadge(published bool) {
	if published {
		<span class="inline-flex px-2 py-1 text-xs font-medium bg-green-100 text-green-800">Published</span>
	} else {
		<span class="inline-flex px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800">Draft</span>
	}
}

templ Card(title string, content templ.Component, actions ...templ.Component) {
	<div class="bg-white border border-gray-200 p-6">
		if title != "" {
			<h3 class="text-lg font-semibold text-gray-900 mb-4">{ title }</h3>
		}
		@content
		if len(actions) > 0 {
			<div class="mt-4 flex justify-end space-x-3">
				for _, action := range actions {
					@action
				}
			</div>
		}
	</div>
}

// Helper types
type SelectOption struct {
	Value string
	Label string
}

templ SearchForm(searchQuery string) {
	<div class="relative mb-6">
		<input type="text" name="search" value={ searchQuery } placeholder="Search posts by title or content..." class="w-full px-3 py-2 pr-16 border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary-500" hx-get="/posts" hx-trigger="input changed delay:300ms" hx-target="#posts-list"/>
		if searchQuery != "" {
			<button type="button" class="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 text-sm px-2" hx-get="/posts" hx-target="#posts-list" title="Clear search">âœ•</button>
		}
	</div>
}

templ VisibilityBadge(visibility string) {
	if visibility == "premium" {
		<span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-black text-white uppercase">Premium</span>
	} else if visibility == "admin" {
		<span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-black text-white uppercase">Admin</span>
	}
}

 